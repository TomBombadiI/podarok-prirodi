@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями и видео
  */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
   Пригодится в большинстве ситуаций
   (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  height: 100%;
  /**
   Убираем скачок интерфейса по горизонтали
   при появлении / исчезновении скроллбара
  */
  scrollbar-gutter: stable;
}

/**
   Плавный скролл
  */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
   Пригодится в большинстве ситуаций
   (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  min-height: 100%;
  /**
   Унифицированный интерлиньяж
  */
  line-height: 1.5;
}

/**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
a:where([class]) {
  display: inline-flex;
}

/**
   Курсор-рука при наведении на элемент
  */
button,
label {
  cursor: pointer;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
:where([fill]:not([fill=none], [fill^=url])) {
  fill: currentColor;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
:where([stroke]:not([stroke=none], [stroke^=url])) {
  stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
   Приведение рамок таблиц в классический 'collapse' вид
  */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Futura";
  src: url("../fonts/FuturaCyrillic-Demi.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Futura";
  src: url("../fonts/FuturaCyrillicMedium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Futura";
  src: url("../fonts/FuturaCyrillicBook.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Futura";
  src: url("../fonts/FuturaCyrillic-Bold.woff2") format("woff2");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Futura";
  src: url("../fonts/FuturaCyrillicLight.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-primary: #fff;
  --color-secondary: #518f4d;
  --color-secondaty-alt: #0f250d;
  --color-accent: #da7c2d;
  --color-accent-alt: #ff8562;
  --color-gray: #b3b3b3;
  --font-primary: "Futura", sans-serif;
  --font-size-xxl: fluid(72, 42);
  --font-size-xl: fluid(42, 30);
  --font-size-l: fluid(36, 24);
  --font-size-md: fluid(24, 20);
  --font-size-s: fluid(18, 16);
  --font-size-xs: 16px;
  --section-padding-y: clamp(6.25rem, 5.625rem + 3.125vw, 9.375rem);
  --container-width: 1200px;
  --container-padding-x: 16px;
  --header-height: clamp(4rem, 3.8rem + 1vw, 5rem);
  --radius-l: 20px;
  --radius-md: 15px;
  --radius-s: 11px;
  --transition-duration: 0.2s;
  --transition-duration-longer: 0.4s;
}

.container {
  width: 100%;
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.container--l {
  max-width: calc(var(--container-width-l) + var(--container-padding-x) * 2);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (min-width: 1024px) {
  .visible-tablet {
    display: none !important;
  }
}

@media (max-width: 1023px) {
  .hidden-tablet {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

.section-title {
  text-transform: uppercase;
  text-align: center;
  margin-bottom: clamp(1.5rem, 1.175rem + 1.625vw, 3.125rem);
}

.animation {
  transition: var(--transition-duration-longer);
  transform: translateY(50%);
  opacity: 0;
}

.animation-start {
  opacity: 1;
  transform: translateY(0);
}

html.is-lock {
  overflow: hidden;
}

body {
  display: flex;
  flex-direction: column;
  background-color: var(--color-secondary);
  font-family: var(--font-primary);
  font-size: var(--font-size-md);
  color: var(--color-primary);
}

main {
  flex-grow: 1;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  color: var(--color-black);
}

h1,
.h1 {
  font-size: var(--font-size-xxl);
  font-weight: 600;
}

h2,
.h2 {
  font-size: var(--font-size-xl);
  font-weight: 600;
}

h3,
.h3 {
  font-size: var(--font-size-l);
  font-weight: 300;
}

h4,
.h4 {
  font-size: var(--font-size-md);
  font-weight: 600;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (hover: hover) {
  a:hover {
    color: var(--color-red-45);
  }
}
@media (hover: none) {
  a:active {
    color: var(--color-red-45);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 2px dashed var(--color-white);
  outline-offset: 4px;
  transition-duration: 0ms !important;
}

/*# sourceMappingURL=main.css.map */
